package MonAppliMessagerie;


/**
* MonAppliMessagerie/AEPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from contrat.idl
* samedi 21 fÈvrier 2015 14 h 55 CET
*/

public abstract class AEPOA extends org.omg.PortableServer.Servant
 implements MonAppliMessagerie.AEOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("saveCertificat", new java.lang.Integer (0));
    _methods.put ("revoquer", new java.lang.Integer (1));
    _methods.put ("publier", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // MonAppliMessagerie/AE/saveCertificat
       {
         try {
           String clepublique = in.read_string ();
           short id = in.read_short ();
           String mdp = in.read_string ();
           String dateExpiration = in.read_string ();
           String usage = in.read_string ();
           MonAppliMessagerie.Certificat $result = null;
           $result = this.saveCertificat (clepublique, id, mdp, dateExpiration, usage);
           out = $rh.createReply();
           MonAppliMessagerie.CertificatHelper.write (out, $result);
         } catch (MonAppliMessagerie.erreur_authent $ex) {
           out = $rh.createExceptionReply ();
           MonAppliMessagerie.erreur_authentHelper.write (out, $ex);
         }
         break;
       }


  // l'AE authentifie puis relaye la demande de revocation
       case 1:  // MonAppliMessagerie/AE/revoquer
       {
         MonAppliMessagerie.Certificat certificatPorteur = MonAppliMessagerie.CertificatHelper.read (in);
         short id = in.read_short ();
         String mdp = in.read_string ();
         String periode = in.read_string ();
         this.revoquer (certificatPorteur, id, mdp, periode);
         out = $rh.createReply();
         break;
       }


  // l'AE renvoi le certificat cr√©√© √† l'appli Porteur qui avait demand√© l'enregistrement
       case 2:  // MonAppliMessagerie/AE/publier
       {
         MonAppliMessagerie.Certificat certificatPorteur = MonAppliMessagerie.CertificatHelper.read (in);
         this.publier (certificatPorteur);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MonAppliMessagerie/AE:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AE _this() 
  {
    return AEHelper.narrow(
    super._this_object());
  }

  public AE _this(org.omg.CORBA.ORB orb) 
  {
    return AEHelper.narrow(
    super._this_object(orb));
  }


} // class AEPOA
