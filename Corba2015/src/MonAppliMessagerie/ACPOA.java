package MonAppliMessagerie;


/**
* MonAppliMessagerie/ACPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from contrat.idl
* samedi 21 février 2015 14 h 55 CET
*/

public abstract class ACPOA extends org.omg.PortableServer.Servant
 implements MonAppliMessagerie.ACOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getCertificat", new java.lang.Integer (0));
    _methods.put ("enregistrer", new java.lang.Integer (1));
    _methods.put ("revoquerCertificat", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // MonAppliMessagerie/AC/getCertificat
       {
         MonAppliMessagerie.Certificat $result = null;
         $result = this.getCertificat ();
         out = $rh.createReply();
         MonAppliMessagerie.CertificatHelper.write (out, $result);
         break;
       }

       case 1:  // MonAppliMessagerie/AC/enregistrer
       {
         String clePublique = in.read_string ();
         short idPorteur = in.read_short ();
         String dateExpiration = in.read_string ();
         String usage = in.read_string ();
         this.enregistrer (clePublique, idPorteur, dateExpiration, usage);
         out = $rh.createReply();
         break;
       }

       case 2:  // MonAppliMessagerie/AC/revoquerCertificat
       {
         try {
           MonAppliMessagerie.Certificat certificatPorteur = MonAppliMessagerie.CertificatHelper.read (in);
           short id = in.read_short ();
           String periode = in.read_string ();
           this.revoquerCertificat (certificatPorteur, id, periode);
           out = $rh.createReply();
         } catch (MonAppliMessagerie.certif_revoque $ex) {
           out = $rh.createExceptionReply ();
           MonAppliMessagerie.certif_revoqueHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MonAppliMessagerie/AC:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AC _this() 
  {
    return ACHelper.narrow(
    super._this_object());
  }

  public AC _this(org.omg.CORBA.ORB orb) 
  {
    return ACHelper.narrow(
    super._this_object(orb));
  }


} // class ACPOA
